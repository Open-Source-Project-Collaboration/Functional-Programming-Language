# top-level
<stmts> ::= { <stmt> }

[disable_indentation, enable_eol]
<stmt> ::= <COMMENT>
         | <fcall>
         | <expr>
         | <fdef>
         | <moduse>
         | <match>
         | <pipe>
         | <type>
         | 'pass'
         | <eox>

<eox> ::= <EOL> | <EOF>


# fcall
<fcall> ::= <dotop> { <arg> }

<dotop> ::= <NAME> ['.' <dotop>]

<arg> ::= '(' <expr> ')'
        | <literal>

<expr> ::= <term> ('+' | '-') <expr>
         | <term>

<term> ::= <fact> ('*' | '/') <term>
         | <fact>

<fact> ::= '(' <expr> ')'
         | <fcall>
         | <literal>

<literal> ::= <NAME>
            | ['-'] <NUM>
            | <STR>
            | <BOOL>
            | <NONE>
            | <array>

<array> ::= '[' <arraypair> ']'

<arraypair> ::= <expr> [';' <arraypair>]


# fdef
<fdef> ::= 'let' ['mut'] <NAME> ['<' <dotop> '>'] { <NAME> } '=' <fbody>

[enable_indentation]
<fbody> ::= <INDENT> ('pass' | { <stmt> }) <DEDENT>
          | <expr>


# mod
<moduse> ::= <mod> | <use>

<mod> ::= 'mod' <NAME> <EOL>

<use> ::= 'use' <dotop> <EOL>


# match
<match> ::= 'match' <expr> <matchbranch> { <matchbranch> }

<matchbranch> ::= '|' <matchcase> '->' <fbody>

<matchcase> ::= <dotop> <NAME>
              | <NAME>
              | <literal>
              | '_'


# pipe
<pipe> ::= <expr> ['|>' <pipe>]


# type
[disable_eol]
<type> ::= 'type' <NAME> '=' <typebody>

<typebody> ::= <enumbody> | <modelbody>

<enumbody> ::= <NAME> '|' <enumbody>
             | <NAME>

[enable_indentation, enable_eol]
<modelbody> ::= <INDENT> <modelstmt> <DEDENT>

<modelstmt> ::= <COMMENT>
              | <fdef>
              | <mdef> <EOL>

<mdef> ::= <NAME> ':' <dotop>