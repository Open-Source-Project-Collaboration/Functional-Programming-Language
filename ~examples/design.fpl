# Comments are like this
print 'Hello World!'


# Built-in types
let n = 42
let s = 'Hi World!'
let b = true


# A mutable variable
let mut x = 3.14


# Functions
let sqr x = x * x


# File IO
mod fs

match fs.read 'design.fpl'
| Some content -> print content
| None         ->
	print 'Failed to read file'


# Lists
[1; 2; 3; 4] |> List.map print


# Loops
[1..10] |> List.map (fun _ -> print 'Bark')


# Enums
type Colours
	= Red
	| Green
	| Blue


# Matching enums
match Enum.random Colours
| Colours.Red   -> print 'It is an error'
| Colours.Green -> print 'It is a warning'
| Colours.Blue  -> print 'It is a success'
| _             -> print 'THERE IS NO SUCH COLOUR'


# Struct alike models
type Dog =
	colour: Colours
	size: int

	# Constructor
	let new size =
		Dog {
			size: size,
			colour: Enum.random Colours
		}

	# Method
	let bark<self> what_to_bark =
		print 'Dog, {self.size} with colour {self.colour} says {what_to_bark}'

	# Static method
	let copy dog =
		Dog { size: dog.size, colour: dog.colour }


# Initializing new models
let barry = Dog { colour: Colours.Red, size: 10 }
barry.bark 'MY NAME IS BARRY'

let barrys_copy = Dog.copy barry
barrys_copy.bark 'MY NAME IS THAT TOO'